import * as hono from '../../deps/hono.ts'
import type { Env } from '../denizen.ts'

import { getPosts, getUser, lastMod } from '../db.ts'
import render from '../common/vento.ts'

export const json = async (c: hono.Context<Env>) => {
	const lastModified = await lastMod()
	const ifModSince = c.req.header('If-Modified-Since')
	if (ifModSince) {
		const ifModSinceDate = new Date(ifModSince).getTime()
		if (lastModified < ifModSinceDate) return c.body(null, 304)
	}

	const siteOwner = await getUser('admin')
	const posts = await getPosts({
		limit: 20,
		cursor: c.req.query('cursor'),
	})
	return c.json(
		{
			version: 'https://jsonfeed.org/version/1.1',
			title: siteOwner.profile.name,
			home_page_url: c.var.baseUrl,
			feed_url: new URL('/feed.json', c.var.baseUrl).href,
			description: siteOwner.profile.note[0],
			user_comment: 'Generated by Denizen <https://codeberg.org/dz4k/denizen>',
			next_url: posts.cursor
				? new URL(
					`/feed.json?cursor=${encodeURIComponent(posts.cursor)}`,
					c.var.baseUrl,
				).href
				: undefined,
			authors: [{
				name: siteOwner.profile.name,
				url: c.var.baseUrl,
			}],
			language: c.var.lang,
			items: posts.data.map((post) => ({
				id: post.uid,
				url: post.uid,
				title: post.name,
				content_html: post.content?.html,
				summary: post.summary,
				image: post.photo[0],
				date_published: post.published.toISOString(),
				date_modified: post.updated?.toISOString(),
				tags: post.category,
			})),
		},
		200,
		{
			'Content-Type': 'application/feed+json',
			'Last-Modified': new Date(lastModified).toUTCString(),
		},
	)
}

export const xml = async (c: hono.Context<Env>) => {
	const lastModified = await lastMod()
	const ifModSince = c.req.header('If-Modified-Since')
	if (ifModSince) {
		const ifModSinceDate = new Date(ifModSince).getTime()
		if (lastModified < ifModSinceDate) return c.body(null, 304)
	}

	const siteOwner = await getUser('admin')
	const posts = await getPosts({
		limit: 20,
		cursor: c.req.query('cursor'),
	})
	return c.body(
		await render(c, 'atom.vto', { siteOwner, posts, lastModified }),
		200,
		{
			'Content-Type': 'application/atom+xml',
		},
	)
}
